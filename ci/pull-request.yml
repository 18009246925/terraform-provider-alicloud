groups:
  - name: all
    jobs:
      - pull-request-integration-test-approve
      - pull-request-integration-test-comment
      - pull-request-docs-example-approve
      - pull-request-docs-example-comment

shared:
  - &run
    task: terraformci
    file: terraform-provider-alicloud/ci/tasks/pull-request.yml
    params:
      ALICLOUD_ACCESS_KEY: {{alicloud_access_key_for_service}}
      ALICLOUD_SECRET_KEY: {{alicloud_secret_key_for_service}}
      ALICLOUD_ACCOUNT_ID: {{alicloud_accound_id_for_service}}
      FC_SERVICE: {{alicloud_fc_service_name}}
      FC_REGION: {{alicloud_fc_region}}
      OSS_BUCKET_NAME: {{alicloud_oss_bucket_name}}
      OSS_BUCKET_REGION: {{alicloud_oss_bucket_region}}
      GITHUB_TOKEN: {{github_token}}

  - &run-example
    task: terraformci
    file: terraform-provider-alicloud/ci/tasks/docs-example.yml
    params:
      ALICLOUD_ACCESS_KEY: {{alicloud_access_key_test}}
      ALICLOUD_SECRET_KEY: {{alicloud_secret_key_test}}
      ALICLOUD_ACCOUNT_ID: {{alicloud_accound_id_test}}
      ALICLOUD_REGION_TEST: {{alicloud_region_test}}
      ALICLOUD_ACCESS_KEY_FOR_SERVICE: {{alicloud_access_key_for_service}}
      ALICLOUD_SECRET_KEY_FOR_SERVICE: {{alicloud_secret_key_for_service}}
      FC_SERVICE: {{alicloud_fc_service_name}}
      FC_REGION: {{alicloud_fc_region}}
      OSS_BUCKET_NAME: {{alicloud_oss_bucket_name}}
      OSS_BUCKET_REGION: {{alicloud_oss_bucket_region}}
      GITHUB_TOKEN: {{github_token_for_docs}}

jobs:
- name: pull-request-integration-test-approve
  plan:
  - in_parallel:
    - get: terraform-provider-alicloud
      resource: github-pr-approve
      trigger: false
      version: every
      params:
        source_path: .
    - get: aliyun-cli
      resource: aliyun-cli
      passed: [pull-request-docs-example-approve]
      trigger: true
  - <<: *run

- name: pull-request-integration-test-comment
  plan:
    - in_parallel:
      - get: terraform-provider-alicloud
        resource: github-pr-comment
        trigger: false
        version: every
        params:
          source_path: .
      - get: aliyun-cli
        resource: aliyun-cli
        passed: [ pull-request-docs-example-comment ]
        trigger: true
    - <<: *run

- name: pull-request-docs-example-approve
  plan:
    - in_parallel:
      - get: terraform-provider-alicloud
        resource: github-pr-approve-docs
        trigger: true
        version: every
        params:
          source_path: .
      - get: aliyun-cli
        resource: aliyun-cli
    - <<: *run-example

- name: pull-request-docs-example-comment
  plan:
    - in_parallel:
      - get: terraform-provider-alicloud
        resource: github-pr-comment-docs
        trigger: true
        version: every
        params:
          source_path: .
      - get: aliyun-cli
        resource: aliyun-cli
    - <<: *run-example

resources:

- name: aliyun-cli
  type: s3
  source:
    access_key_id: {{aliyun_cli_access_key}}
    secret_access_key: {{aliyun_cli_secret_key}}
    bucket: {{aliyun_cli_bucket}}
    regexp: .*-cli-linux-3\.0\.(\d+)-amd64\.tgz
    region_name: {{aliyun_cli_region}}
    endpoint: oss-((aliyun_cli_region)).aliyuncs.com

- name: github-pr-approve
  type: github-pr-comment-resource
  source:
    repository: aliyun/terraform-provider-alicloud
    access_token: {{github_token}}
    review_states: ["approved"]
    when: latest

- name: github-pr-comment
  type: github-pr-comment-resource
  source:
    repository: aliyun/terraform-provider-alicloud
    access_token: {{github_token}}
    review_states: ["commented"]
    when: latest
    comments: ["^approved$"]
    commenter_association: ["owner"]

- name: github-pr-approve-docs
  type: github-pr-comment-resource
  source:
    repository: aliyun/terraform-provider-alicloud
    access_token: {{github_token_for_docs}}
    review_states: ["approved"]
    when: latest

- name: github-pr-comment-docs
  type: github-pr-comment-resource
  source:
    repository: aliyun/terraform-provider-alicloud
    access_token: {{github_token_for_docs}}
    review_states: ["commented"]
    when: latest
    comments: ["^approved$"]
    commenter_association: ["owner"]

resource_types:
  - name: github-pr-comment-resource
    type: docker-image
    source:
      repository: ndrjng/concourse-github-pr-comment-resource
